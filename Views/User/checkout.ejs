<%- include('header.ejs') %>


    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">
                <div class="row">

                    <!-- <div class="col-lg-6">
                        <div class="toggle_info">
                            <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Have a coupon?</span> <a
                                    href="#coupon" data-bs-toggle="collapse" class="collapsed"
                                    aria-expanded="false">Click
                                    here to enter your code</a></span>
                        </div>
                        <div class="panel-collapse collapse coupon_form " id="coupon">
                            <div class="panel-body">
                                <p class="mb-30 font-sm">If you have a coupon code, please apply it below.</p>
                                <div>
                                    <div class="form-group">
                                        <input type="text" placeholder="Enter Coupon Code...">
                                    </div>
                                    <div>
                                        <button class="btn  btn-md" name="login">Apply Coupon</button>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div> -->


                    <div class="col-lg-6">
                        <div class="toggle_info">
                            <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Have a coupon?</span> <a
                                    href="#coupon" data-bs-toggle="collapse" class="collapsed"
                                    aria-expanded="false">Click here to enter your code</a></span>
                        </div>
                        <div class="panel-collapse collapse coupon_form" id="coupon">
                            <div class="panel-body">
                                <p class="mb-30 font-sm">If you have a coupon code, please apply it below.</p>
                                <!-- Form is now removed -->
                                <div>
                                    <input type="text" name="couponCode" id="couponCode"
                                        placeholder="Enter Coupon Code...">
                                </div>
                                <div>
                                    <button class="btn btn-md" name="applyCoupon" id="applyCouponBtn">Apply
                                        Coupon</button>
                                    <!-- "Show Coupons" button is outside the form -->
                                    <button class="btn btn-md" name="showCoupons" id="showCouponsButton">Show
                                        Coupons</button>
                                    <button class="btn btn-md" id="cancelCouponBtn">Cancel Coupon</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Modal remains unchanged -->
                    <div class="modal" id="couponModal" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Available Coupons</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body" id="couponDetails">
                                    <!-- Coupons will be dynamically loaded here -->
                                </div>
                            </div>
                        </div>
                    </div>




                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="divider mt-50 mb-50"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-25">
                            <h4>Billing Details</h4>
                        </div>
                        <div class="col-md-8">
                            <div class="tab-content dashboard-content">
                                <div class="tab-pane show active">
                                    <div class="card-header">
                                        <h3 class="mb-0">Address</h3>
                                    </div><br>
                                    <% address.forEach(row=> { %>
                                        <% row.addressDetails.forEach((details,index)=> { %>
                                            <div class="row">
                                                <div class="card-header">
                                                    <h5 class="mb-0">Address <%= index + 1 %>
                                                    </h5>
                                                </div>
                                                <div class="card-body">
                                                    <div>
                                                        <input style="width: 16px; height: 16px;" type="radio" checked
                                                            name="addressID" id="addressID" value="<%= details._id %>">
                                                        <label for="address">Select</label>
                                                    </div>
                                                    <address>
                                                        <%= details.address %>,<br>
                                                            <%= details.country %>,<br>
                                                                <%= details.state %>,<br>
                                                                    <%= details.city %>,<br>
                                                                        <%= details.pincode %>
                                                    </address>
                                                </div>
                                            </div>
                                            <br>
                                            <% }) %>
                                                <% }) %>
                                                    <br>
                                                    <div>
                                                        <a href="/add-address"
                                                            class="btn btn-primary btn-sm rounded">Add
                                                            New
                                                            Address</a>
                                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="order_review">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table text-center">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for(let i=0;i<cartItems.length;i++){ %>
                                            <tr>
                                                <td class="image product-thumbnail">
                                                </td>
                                                <td>
                                                    <h5><a href="shop-product-full.html">
                                                            <%= cartItems[i].product.title %>
                                                        </a></h5>
                                                    <span class="product-qty">x <%= cartItems[i].quantity %></span>
                                                </td>
                                                <td>â‚¹<%= cartItems[i].price * cartItems[i].quantity%>
                                                </td>
                                            </tr>

                                            <% } %>
                                                <tr>
                                                    <th>SubTotal</th>
                                                    <td class="product-subtotal" colspan="2" id="subTotal">
                                                        <%= totalPrice %>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Discount</th>
                                                    <td colspan="2"><em id="discountPrice">
                                                            <%= discount %>
                                                        </em>

                                                    </td>
                                                </tr>
                                                <tr>
                                                    <th>Shipping</th>
                                                    <td colspan="2"><em>Free Shipping</em></td>
                                                </tr>
                                                <tr>
                                                    <th>Total</th>
                                                    <td colspan="2" class="product-subtotal"><span
                                                            class="font-xl text-brand fw-900" id="totalPrice">
                                                            <%= totalPrice %>
                                                        </span>
                                                    </td>
                                                </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                            <div class="payment_method">
                                <div class="mb-25">
                                    <h5>Payment</h5>
                                </div>
                                <div class="payment_option">
                                    <div class="checkout__input__checkbox">
                                        <label for="payment-cod">
                                            COD
                                            <input style="width: 16px; height: 14px;" type="radio" id="payment-cod"
                                                name="paymentMethod" value="COD" />
                                            <span class="checkmark"></span>
                                        </label>
                                    </div>
                                    <div class="checkout__input__checkbox">
                                        <label for="payment-razorpay">
                                            Razorpay
                                            <input style="width: 16px; height: 14px;" type="radio" id="payment-razorpay"
                                                name="paymentMethod" value="Razorpay" />
                                            <span class="checkmark"></span>
                                            <span id="check-error" style="font-size: 14px; margin-top: -5px"></span>
                                        </label>
                                    </div>

                                    <!--  <div class="checkout__input__checkbox">
                                        <label for="payment-wallet">
                                            Wallet
                                            <input style="width: 16px; height: 14px;" type="checkbox"
                                                id="payment-wallet" name="paymentMethod" value="Wallet" />
                                            <span class="checkmark"></span>
                                        </label>
                                    </div> -->
                                </div>
                            </div>

                            <button href="#" class="btn btn-fill-out btn-block mt-30" id="place-order-btn">Place
                                Order</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="/static/js/vendor/jquery-3.6.0.min.js"></script>
    <script>
        document.getElementById("place-order-btn").addEventListener("click", async (e) => {
            e.preventDefault();
            const placeOrderBtn = document.getElementById("place-order-btn");
            placeOrderBtn.disabled = true;

            const addressID = document.querySelector('input[name="addressID"]:checked')?.value;
            const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked')?.value;
            const discount = document.getElementById('discountPrice').innerText
            const totalPrice = document.getElementById('totalPrice').innerText

            if (!addressID || !paymentMethod) {
                Swal.fire({ icon: 'error', title: 'Missing Information', text: 'Please select an address and a payment method.', confirmButtonText: 'OK' });
                placeOrderBtn.disabled = false;
                return;
            }

            // console.log(discount,totalPrice)
            if (paymentMethod === 'COD') {
                try {
                    const response = await fetch("/home/cart/checkout/placeorder", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ addressID, paymentMethod, discount, totalPrice })
                    });

                    const result = await response.json();
                    // console.log(result); 

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Order Placed Successfully',
                            text: result.message,
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            window.location.href = `/home/cart/checkout/placeorder/order-confirm/${result.orderId}`;
                        });
                    } else if (response.status === 400) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Order Not Allowed',
                            text: result.message || 'Error placing order.',
                            confirmButtonText: 'OK'
                        });
                        placeOrderBtn.disabled = false;
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Order Failed',
                            text: result.message || 'Error placing order.',
                            confirmButtonText: 'Try Again'
                        });
                        placeOrderBtn.disabled = false;
                    }
                } catch (error) {
                    console.error("Error placing order:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'There was an error placing your order. Please try again.',
                        confirmButtonText: 'OK'
                    });
                    placeOrderBtn.disabled = false;
                }
            } else if (paymentMethod === 'Razorpay') {
                try {
                    const response = await fetch("/home/cart/checkout/razorpay-order", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ addressID, paymentMethod, totalPrice })
                    });
                    const result = await response.json();

                    if (response.ok) {
                        const { razorpayOrderId, amount, currency, orderId } = result;

                        var options = {
                            key: "<%= process.env.RAZORPAY_KEY_ID %>",
                            amount: amount,
                            currency: currency,
                            order_id: razorpayOrderId,
                            handler: async function (response) {
                                const verifyResponse = await fetch("/home/cart/checkout/verify-payment", {
                                    method: "POST",
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify({
                                        razorpay_order_id: response.razorpay_order_id,
                                        razorpay_payment_id: response.razorpay_payment_id,
                                        razorpay_signature: response.razorpay_signature,
                                        addressID,
                                        paymentMethod,
                                        discount,
                                        totalPrice,
                                    }),
                                });

                                const verifyResult = await verifyResponse.json();
                                if (verifyResponse.ok) {
                                    Swal.fire({ icon: 'success', title: 'Payment Successful', showConfirmButton: false, timer: 2000 })
                                        .then(() => window.location.href = `/home/cart/checkout/placeorder/order-confirm/${verifyResult.orderId}`); // Use orderId from response
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Verification Failed',
                                        text: verifyResult.message || 'Please contact support.',
                                    });
                                }
                            },
                            prefill: {
                                name: "<%= user.name %>",
                                email: "<%= user.email %>",
                                contact: "<%= user.phno %>"
                            },
                            // theme: { color: "#F37254" }
                        };

                        var rzp = new Razorpay(options);
                        rzp.open();
                        // rzp.on('payment.failed', function (response) {
                        //     Swal.fire({ icon: 'error', title: 'Payment Failed', text: 'Payment was not successful. Please try again.' });
                        //     placeOrderBtn.disabled = false;
                        // });






                        rzp.on('payment.failed', async function (response) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Payment Failed',
                                text: 'Payment was not successful. Please try again.',
                                confirmButtonText: 'Retry Payment',
                                showCancelButton: true,
                                cancelButtonText: 'Check Orders'
                            }).then(async (result) => {
                                if (result.isConfirmed) {
                                    rzp.open();  // Retry payment
                                } else {
                                    // Attempt to create a failed order in the backend
                                    await fetch("/home/cart/checkout/verify-payment", {
                                        method: "POST",
                                        headers: { "Content-Type": "application/json" },
                                        body: JSON.stringify({
                                            razorpay_order_id: response.razorpay_order_id,
                                            paymentStatus: "Failed",
                                            addressID,
                                            totalPrice
                                        }),
                                    });
                                    window.location.href = "/home/account/myOrders";  // Redirect to orders page
                                }
                            });
                            placeOrderBtn.disabled = false;
                        });






                        rzp.on('modal.close', function () {
                            Swal.fire({ icon: 'warning', title: 'Payment Cancelled', text: 'You canceled the payment.' });
                            placeOrderBtn.disabled = false;
                        });
                    } else {
                        Swal.fire({ icon: 'error', title: 'Order Failed', text: result.message || 'Error placing order.' });
                    }
                } catch (error) {
                    Swal.fire({ icon: 'error', title: 'Error', text: 'There was an error processing your payment. Please try again.' });
                } finally {
                    placeOrderBtn.disabled = false;
                }
            }
        });
    </script>

    <script>
        // get coupons
        document.getElementById('showCouponsButton').addEventListener('click', function () {
            const totalPrice = document.getElementById('subTotal').innerText;
            fetch(`/home/cart/checkout/getCoupon?totalPrice=${totalPrice}`)
                .then(response => response.json())
                .then(data => {
                    var couponDetails = document.getElementById('couponDetails');
                    couponDetails.innerHTML = ''
                    data.coupons.forEach(coupon => {
                        couponDetails.innerHTML += '<p>' + coupon.couponCode + ': ' + coupon.description + '</p>'
                    });
                    var couponModal = new bootstrap.Modal(document.getElementById('couponModal'));
                    couponModal.show()
                })
                .catch(error => console.log('error fetching coupons : ', error))
        })


        // apply coupon 
        document.addEventListener("DOMContentLoaded", function () {
            const applyCouponBtn = document.getElementById("applyCouponBtn");
            // const cancelCouponBtn = document.getElementById("cancelCouponBtn");
            const totalPriceElement = document.getElementById("totalPrice");

            applyCouponBtn.addEventListener("click", function () {

                const couponCode = document.getElementById("couponCode").value.trim();

                if (!couponCode) {
                    Swal.fire({
                        icon: "error",
                        title: "Coupon code is required",
                        showConfirmButton: false,
                        timer: 1500
                    });
                    return;
                }
                // console.log(couponCode);
                applyCoupon(couponCode);
            });


            function applyCoupon(couponCode) {

                fetch('/home/cart/checkout/applyCoupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ couponCode })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Failed to apply coupon');
                        }
                        return response.json();
                    })
                    .then(data => {
                        // console.log('Coupon applied successfully');
                        const newTotalPrice = data.newTotalPrice
                        const discount = data.discount
                        // console.log(newTotalPrice);
                        // document.getElementById('subtotal').innerText = newTotalPrice;
                        // document.getElementById('+').innerText = "-" + discount;
                        document.getElementById('totalPrice').innerText = newTotalPrice;
                        document.getElementById('discountPrice').innerText = discount;
                        Swal.fire({
                            icon: "success",
                            title: "Coupon Applied",
                            showConfirmButton: false,
                            timer: 1500
                        });
                    })
                    .catch(error => {
                        console.error('Error applying coupon:', error);
                    });
            }

        });



        // cancel coupon
        document.addEventListener('DOMContentLoaded', function () {
            const cancelCouponBtn = document.getElementById('cancelCouponBtn')

            if (cancelCouponBtn) {
                cancelCouponBtn.addEventListener('click', function () {
                    const couponCode = document.getElementById('couponCode').value.trim();
                    const totalPrice = document.getElementById('totalPrice').innerText

                    if (!couponCode) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Coupon code is required',
                            showConfirmButton: false,
                            timer: 1500
                        });
                        return;
                    }
                    // console.log(couponCode)
                    cancelCoupon(couponCode, totalPrice);
                });
            }
        })

        function cancelCoupon(couponCode, totalPrice) {
            fetch('/home/cart/checkout/cancelCoupon', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ couponCode, totalPrice })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new error('failed to apply coupon')
                    }
                    return response.json()
                })
                .then(data => {
                    // console.log(data,data.originalTotalPrice)
                    const orginalTotalPrice = data.originalTotalPrice
                    console.log(orginalTotalPrice)
                    document.getElementById('totalPrice').innerText = orginalTotalPrice
                    document.getElementById('discountPrice').innerText = 0

                    Swal.fire({
                        icon: 'success',
                        title: 'coupon removed',
                        showConfirmButton: false,
                        timer: 1500
                    })
                })
                .catch(error => {
                    console.error('error cancelling coupon', error)
                })
        }
    </script>

    <%- include('footer.ejs') %>